{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/cannon.js","webpack:///./components/game_controls.js","webpack:///./components/scoring.js","webpack:///./components/shield.js","webpack:///./components/waves.js","webpack:///./game.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACle,qEAAM,EAAC;;;;;;;;;;;;;ACxHtB;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACzD5B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;ACjDvB;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/DtB;AAAA;AAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,+CAAM;AAClC;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,0DAA0D;AAC1D,mFAAmF;AACnF,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;;AAGe,oEAAK,EAAC;;;;;;;;;;;;;AC1GrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACA;AACI;AACP;AACiB;;;AAGvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA,6BAA6B,0DAAM;;AAEnC;AACA;;AAEA,uBAAuB,iEAAa;;AAEpC;AACA;;AAEA,sBAAsB,2DAAS;AAC/B;;AAEA,iBAAiB,yDAAI;;AAErB;AACA;AACA,eAAe,yDAAI;AACnB,oBAAoB,2DAAS;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./game.js\");\n","class Cannon {\n  constructor( ctx, canWidth, canHeight, clusterAngle, openedModal){\n    const colors = [\"red\", \"green\", \"orange\", \"brown\", \"black\", \"blue\", \"purple\",\"rgb(0,0,255)\" , \"lightblue\" , \"gray\"];\n    this.color = colors[Math.floor(Math.random()*10)];\n    this.canWidth = canWidth;\n    this.canHeight = canHeight;\n    this.ctx = ctx;\n    this.x0 = canWidth/2;\n    this.y0 = canHeight * 1/2;\n\n    this.openedModal = openedModal;\n\n    this.g = 1;\n    const v0 = -27;\n\n    this.cannonRadius = 1;\n    this.dr = 0.05;\n\n    this.status = 1;\n\n    const angle = (Math.random()/20 + clusterAngle)* Math.PI ;\n\n    this.vy0 = v0 * Math.sin (angle);\n    this.vx0 = v0 * Math.cos (angle);\n\n    this.t = 0;\n    this.dt = 0.1;\n\n    this.x = this.vx0 * this.t + this.x0;\n    this.y = (this.g * Math.pow(this.t, 2)) + (this.vy0 * this.t) + this.y0;\n\n  }\n\n  drawCannon(){\n    // this.ctx.shadowOffsetY = 350-this.y+ 8*this.cannonRadius;\n    // this.ctx.shadowColor= \"rgba(0,0,0,0.5)\";\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.cannonRadius, 0, Math.PI*2);\n    this.ctx.fillStyle = \"white\" ;\n    this.ctx.strokeStyle = this.color;\n    this.ctx.lineWidth = this.cannonRadius * 0.1;\n    this.ctx.fill();\n    this.ctx.stroke();\n  }\n\n  blockedExplosion(){\n    // debugger\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y-5, this.cannonRadius+5, 0, Math.PI*2);\n    this.ctx.fillStyle = \"red\";\n    this.ctx.lineWidth = 5;\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y-3, this.cannonRadius-3, 0, Math.PI*2);\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.lineWidth = 5;\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    this.ctx.beginPath();\n    this.ctx.arc(this.x +5 * Math.random(), this.y + (4 * Math.random()), this.cannonRadius-14, 0, Math.PI*2);\n    this.ctx.fillStyle = \"red\";\n    this.ctx.lineWidth = 2;\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  checkForExplosion(guardianShield, scoreKeeping){\n    if(this.y >= this.canHeight - guardianShield.paddleHeight - this.cannonRadius && this.y <= this.canHeight) {\n      if(this.x > guardianShield.paddleX && this.x < guardianShield.paddleX + guardianShield.paddleWidth) {\n        if(!this.openedModal){\n          guardianShield.blockCannonAudio();\n        }\n        this.status = -2;\n        scoreKeeping.score ++;\n      }\n    }\n  }\n\n  handleLose(guardianShield, scoreKeeping ){\n    if(this.y > this.canHeight + 2 * this.cannonRadius) {\n      this.status = 0;\n      scoreKeeping.lives --;\n      if (!this.openedModal) {\n        guardianShield.looseLife();\n      }\n\n      if (scoreKeeping.lives === 0) {\n        scoreKeeping.resetGame(true, scoreKeeping.wave , scoreKeeping.score);\n\n      }\n    }\n  }\n  moveCannon(guardianShield, scoreKeeping){\n    if (this.status < 0) {\n      return null;\n    }\n    this.t += this.dt;\n\n    this.cannonRadius += this.dr;\n\n    this.x = this.vx0 * this.t + this.x0;\n    this.y = (this.g * Math.pow(this.t, 2)) + (this.vy0 * this.t) + this.y0;\n\n    // bounce off walls\n    if(this.x > this.canWidth - this.cannonRadius || this.x < this.cannonRadius) {\n      this.x0 = (this.vx0 * this.t) + this.x;\n      this.vx0 = -(this.vx0) ;\n    }\n\n    // cannons explodes\n    this.checkForExplosion(guardianShield, scoreKeeping);\n\n    // Lose life\n    this.handleLose(guardianShield, scoreKeeping);\n  }\n}\n\nexport default Cannon;\n","class GameControls {\n  constructor(canvasElement, rightPressed, leftPressed, guardianShield){\n    this.canvasElement = canvasElement;\n    this.rightPressed = rightPressed;\n    this.leftPressed = leftPressed;\n    this.guardianShield = guardianShield;\n\n\n    document.getElementById('volume').onclick = this.handleSound;\n\n    document.addEventListener(\"mousemove\", this.mouseMoveHandler.bind(this), false);\n\n    document.addEventListener(\"keydown\", this.keyDownHandler, false);\n    document.addEventListener(\"keyup\", this.keyUpHandler, false);\n\n    document.addEventListener(\"keydown\", guardianShield.keyDownHandler, false);\n    document.addEventListener(\"keyup\", this.keyUpHandler, false);\n  }\n\n  handleSound(){\n    document.getElementById('nosound').classList.toggle(\"muted\");\n    document.getElementById('sound').classList.toggle(\"muted\");\n\n    document.getElementById('explosion1').muted = document.getElementById('explosion1').muted ? false : true;\n    document.getElementById('explosion2').muted = document.getElementById('explosion2').muted ? false : true;\n    document.getElementById('background-song').muted = document.getElementById('background-song').muted ? false : true;\n    document.getElementById('background-song').play();\n  }\n\n  keyDownHandler(e) {\n    // debugger\n    if(e.keyCode == 39) {\n      this.rightPressed = true;\n    }\n    else if(e.keyCode == 37) {\n      this.leftPressed = true;\n    }\n  }\n\n  keyUpHandler(e) {\n    if(e.keyCode == 39) {\n      this.rightPressed = false;\n    }\n    else if(e.keyCode == 37) {\n      this.leftPressed = false;\n    }\n  }\n\n  mouseMoveHandler(e) {\n    let relativeX = e.clientX - this.canvasElement.offsetLeft;\n    if(relativeX > 0 && relativeX < this.canvasElement.width) {\n      this.guardianShield.paddleX = relativeX - this.guardianShield.paddleWidth/2;\n    }\n  }\n\n}\n\nexport default GameControls;\n","class Scoring {\n  constructor(ctx, canWidth, canHeight, resetGame, lastWave=0, lastScore=0){\n    this.score = 0;\n    this.wave = 0;\n    this.ctx = ctx;\n    this.canWidth = canWidth;\n    this.canHeight = canHeight;\n    this.resetGame = resetGame;\n    this.lastWave=lastWave;\n    this.lastScore=lastScore;\n    this.lives = 10;\n\n  }\n  drawScore() {\n    this.ctx.font = \"1.5em Arial\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(\"Score: \"+this.score, 80, 20);\n  }\n  drawLives() {\n    this.ctx.font = \"1.5em Arial\";\n    this.ctx.fillStyle = \"#white\";\n    this.ctx.fillText(\"Lives: \"+this.lives, this.canWidth-80, 20);\n  }\n\n  displayModal(){\n    const topPadding = this.canHeight/3;\n    // display Instructions\n    this.ctx.lineWidth = 3;\n    this.ctx.font = \"2.5em Arial\";\n    this.ctx.strokeStyle = 'black';\n    this.ctx.strokeText(\"Click to Start\", this.canWidth/2, 80+topPadding);\n    this.ctx.fillStyle = \"#white\";\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillText(\"Click to Start\", this.canWidth/2, 80+topPadding);\n    // display wave\n    this.ctx.font = \"1.5em Arial\";\n    this.ctx.strokeStyle = 'black';\n    this.ctx.strokeText(\"Wave: \"+this.lastWave, this.canWidth/2, 120+topPadding);\n    this.ctx.fillStyle = \"#white\";\n    this.ctx.fillText(\"Wave: \"+this.lastWave, this.canWidth/2, 120+topPadding);\n    // display score\n    this.ctx.font = \"1.5em Arial\";\n    this.ctx.strokeStyle = 'black';\n    this.ctx.strokeText(\"Score: \"+this.lastScore, this.canWidth/2, 160+topPadding);\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(\"Score: \"+this.lastScore, this.canWidth/2, 160+topPadding);\n  }\n}\n\nexport default Scoring;\n","class Shield{\n  constructor(ctx, canvasElement, canWidth, canHeight){\n    this.ctx = ctx;\n    this.canvasElement = canvasElement;\n    this.canWidth = canWidth;\n    this.canHeight = canHeight;\n\n    this.paddleHeight = 25;\n    this.paddleWidth = 200;\n    this.paddleX = (this.canWidth-this.paddleWidth)/2;\n\n    this.flashed = -1;\n\n\n    this.blockingExplosion = document.getElementById('explosion2');\n    this.blockingExplosion.volume = 0.1;\n    this.dieingExplosion = document.getElementById('explosion1');\n  }\n\n  drawShield() {\n\n    // const height3d = this.canHeight-this.paddleHeight;\n    // const refFactor = ( 2 * this.paddleHeight ) * (this.canHeight/2 - this.paddleX )/this.canHeight ;\n    // console.log(this.paddleX);\n    //\n    // this.ctx.moveTo(this.paddleX, height3d);\n    // this.ctx.lineTo(this.paddleX*2, height3d - this.paddleHeight);\n    // this.ctx.lineTo(this.paddleX/2 + this.paddleWidth/2 - refFactor, height3d - this.paddleHeight);\n    // this.ctx.lineTo(this.paddleX + this.paddleWidth, height3d);\n    // // this.ctx.lineTo(500,200);\n    // this.ctx.stroke();\n\n    this.ctx.beginPath();\n    this.ctx.rect(this.paddleX, this.canHeight-this.paddleHeight, this.paddleWidth, this.paddleHeight);\n    this.ctx.fillStyle = \"lightgray\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  looseLife(){\n    this.dieingExplosion.currentTime = 0;\n    this.dieingExplosion.play();\n    this.canvasElement.classList.toggle(\"background-flash\");\n    this.flashed = 2;\n  }\n\n  blockCannonAudio(){\n    this.blockingExplosion.currentTime = 0;\n    this.blockingExplosion.play();\n  }\n\n  moveShield(rightPressed, leftPressed){\n    const sensitivity = 7;\n\n    if(rightPressed && this.paddleX < this.canWidth-this.paddleWidth) {\n      this.paddleX += sensitivity;\n    }\n    if(leftPressed && this.paddleX > 0) {\n      this.paddleX -= sensitivity;\n    }\n  }\n}\n\nexport default Shield;\n","import Cannon from './cannon';\n\nclass Waves{\n  constructor(ctx, canWidth, canHeight, openedModal, clusterAngle){\n    this.ctx = ctx;\n    this.canWidth = canWidth;\n    this.canHeight = canHeight;\n    this.clusterDelay = 0;\n    this.clusterAngle = clusterAngle;\n    this.intervalDelay = 0;\n    this.waveDelay = 0;\n    this.wave = 0;\n    this.cannons = [];\n\n    this.framesPerCannon = openedModal ? 0 : 25 ; //????\n    this.cannonsPerCluster = 1;\n    this.clustersPerWave = 1;\n    this.delayFramesBetweenClusters= 0;\n    this.delayRatio = 20;\n\n    this.openedModal = openedModal;\n    this.currentWave = true;\n  }\n\n  incrementIntervalDelay(resetIntervalDelay){\n    if (this.intervalDelay === 0){\n      this.cannons.push(new Cannon(this.ctx, this.canWidth, this.canHeight, this.clusterAngle, this.openedModal));\n      this.intervalDelay = resetIntervalDelay;\n    } else {\n      this.intervalDelay -= 1;\n    }\n  }\n\n  incrementClusterDelay(resetClusterDelay){\n    if (this.clusterDelay === 0){\n      this.clusterAngle  = 0.3 * Math.random() + 0.325;\n      this.clusterDelay = resetClusterDelay;\n      this.delayFramesBetweenClusters = this.delayRatio - Math.floor(this.wave/2);\n    } else {\n      this.clusterDelay -= 1;\n    }\n  }\n\n  incrementWaveDelay(resetWave, myScoring){\n    if (this.waveDelay === 0){\n\n      this.waveDelay = resetWave;\n      this.wave += 1;\n      myScoring.lives ++;\n      myScoring.wave = this.wave\n      this.currentWave = false;\n\n      if (this.wave % 2 === 1){\n        this.framesPerCannon = Math.floor(this.framesPerCannon * 0.9);\n      }\n      if (this.wave % 2 === 1){\n        this.cannonsPerCluster += 1;\n      }\n      if (this.wave % 3 === 1){\n        this.clustersPerWave += 1;\n      }\n    } else {\n      this.waveDelay -= 1;\n    }\n  }\n\n  drawWave(guardianShield, myScoring){\n    // if (this.waveIncrease){\n      // if ( this.delayFramesBetweenClusters === 0){\n        this.incrementIntervalDelay(this.framesPerCannon); //create new cannon\n        this.incrementClusterDelay(this.cannonsPerCluster * this.framesPerCannon ); //cahange cannon cluster direction\n      // } else {\n      //   this.delayFramesBetweenClusters -= 1;\n      // }\n      this.incrementWaveDelay(this.clustersPerWave * this.cannonsPerCluster * this.framesPerCannon, myScoring );\n      this.currentWave = true;\n    // }\n\n    // draw all cannons in the frame\n    this.drawAttackingWave(guardianShield, myScoring);\n  }\n\n  drawWaveLabel(){\n    this.ctx.font = \"2.5em Arial\";\n    this.ctx.fillStyle = \"#white\";\n    this.ctx.fillText(\"Wave: \"+this.wave, this.canWidth/2, 80);\n  }\n\n  drawAttackingWave(guardianShield, myScoring) {\n    for (let i = this.cannons.length-1; i >=0 ; i--) {\n      this.cannons[i].moveCannon(guardianShield, myScoring);\n      if (this.cannons[i].status === 1) {\n        this.cannons[i].drawCannon();\n      }\n      if (this.cannons[i].status < 0 && this.cannons[i].status > -5 ){ //cannon to explode on shield\n        this.cannons[i].blockedExplosion();\n        this.cannons[i].status += 1;\n      }\n      if (this.cannons[i].status === 0){ // status === 0 , remove cannon\n        this.cannons.splice(i, 1);\n      }\n    }\n  }\n}\n\n\nexport default Waves;\n","import Cannon from './components/cannon';\nimport Shield from './components/shield';\nimport MyScoring from './components/scoring';\nimport Wave from './components/waves';\nimport GameControlls from './components/game_controls';\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  const canvasElement = document.getElementById('canvasEl');\n  const ctx = canvasElement.getContext(\"2d\");\n\n  const canWidth = document.getElementById('wallpaper').width * 0.60;\n  const canHeight = document.getElementById('wallpaper').height * 0.70;\n\n  canvasElement.width = canWidth;\n  canvasElement.height = canHeight;\n\n\n  // create guardianShield\n  const guardianShield = new Shield(ctx, canvasElement, canWidth, canHeight);\n\n  let rightPressed;\n  let leftPressed;\n\n  const controls = new GameControlls(canvasElement, rightPressed, leftPressed, guardianShield);\n\n  const cannons = [];\n  let clusterAngle  = 0.3 * Math.random() + 0.3;\n\n  let myScoring = new MyScoring(ctx, canWidth, canHeight);\n  let openedModal = true;\n\n  let wave = new Wave(ctx, canWidth, canHeight, openedModal,clusterAngle);\n\n  const resetGame = (modalOn, lastWave, lastScore) => {\n    openedModal = modalOn;\n    wave = new Wave(ctx, canWidth, canHeight, openedModal, clusterAngle);\n    myScoring = new MyScoring(ctx, canWidth, canHeight, resetGame, lastWave, lastScore);\n  };\n\n  canvasElement.onclick = ()=> {\n    resetGame(false);\n  };\n  function draw() {\n\n    if (guardianShield.flashed > -1) {\n      guardianShield.flashed--;\n      if (guardianShield.flashed === -1){\n        canvasElement.classList.toggle(\"background-flash\");\n      }\n    }\n    ctx.clearRect(0, 0, canWidth, canHeight);\n    guardianShield.drawShield();\n    guardianShield.moveShield(controls.rightPressed, controls.leftPressed);\n\n\n    wave.drawWave(guardianShield, myScoring);\n\n    if (openedModal) {\n      myScoring.displayModal()\n    } else {\n      myScoring.drawScore();\n      myScoring.drawLives();\n      wave.drawWaveLabel();\n    }\n\n  }\n\n  setInterval(draw, 10);\n});\n"],"sourceRoot":""}